---
- name: Install Flameshot Screenshot Tool
  hosts: all
  become: yes
  gather_facts: yes
  
  vars:
    configure_shortcuts: true
    set_as_default: true
    create_desktop_entry: true
    
  tasks:
    - name: Display Flameshot installation plan
      ansible.builtin.debug:
        msg: |
          📸 Flameshot Screenshot Tool Installation
          
          Target: {{ inventory_hostname }}
          
          🔧 Configuration:
          • Keyboard shortcuts: {{ 'Yes' if configure_shortcuts else 'No' }}
          • Set as default: {{ 'Yes' if set_as_default else 'No' }}
          • Desktop integration: {{ 'Yes' if create_desktop_entry else 'No' }}

    # ====== INSTALLATION ======
    - name: Ensure Flatpak is installed
      ansible.builtin.dnf:
        name: flatpak
        state: present

    - name: Add Flathub repository
      ansible.builtin.command:
        cmd: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      changed_when: false
      failed_when: false

    - name: Install Flameshot via Flatpak
      community.general.flatpak:
        name: org.flameshot.Flameshot
        state: present
        remote: flathub

    - name: Verify Flameshot installation
      ansible.builtin.command: flatpak list --app
      register: flameshot_check
      changed_when: false

    - name: Check if Flameshot is in the list
      ansible.builtin.debug:
        msg: "✅ Flameshot installed successfully via Flatpak"
      when: "'flameshot' in flameshot_check.stdout.lower()"

    # ====== CREATE WRAPPER SCRIPT ======
    - name: Create Flameshot wrapper script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          flatpak run org.flameshot.Flameshot "$@"
        dest: /usr/local/bin/flameshot
        mode: '0755'

    # ====== CONFIGURATION ======
    - name: Create Flameshot configuration directory
      ansible.builtin.file:
        path: /etc/skel/.config/flameshot
        state: directory
        mode: '0755'

    - name: Configure Flameshot default settings
      ansible.builtin.copy:
        content: |
          [General]
          disabledTrayIcon=false
          showStartupLaunchMessage=false
          
          [Shortcuts]
          TYPE_ARROW=A
          TYPE_CIRCLE=C
          TYPE_CIRCLECOUNT=
          TYPE_COMMIT_CURRENT_TOOL=Ctrl+Return
          TYPE_COPY=Ctrl+C
          TYPE_DELETE_CURRENT_TOOL=Del
          TYPE_DRAWER=D
          TYPE_EXIT=Ctrl+Q
          TYPE_IMAGEUPLOADER=Return
          TYPE_MARKER=M
          TYPE_MOVESELECTION=Ctrl+M
          TYPE_MOVE_LEFT=Left
          TYPE_MOVE_RIGHT=Right
          TYPE_MOVE_UP=Up
          TYPE_MOVE_DOWN=Down
          TYPE_OPEN_APP=Ctrl+O
          TYPE_PENCIL=P
          TYPE_PIN=
          TYPE_PIXELATE=B
          TYPE_RECTANGLE=R
          TYPE_REDO=Ctrl+Shift+Z
          TYPE_RESIZE_DOWN=Shift+Down
          TYPE_RESIZE_LEFT=Shift+Left
          TYPE_RESIZE_RIGHT=Shift+Right
          TYPE_RESIZE_UP=Shift+Up
          TYPE_SAVE=Ctrl+S
          TYPE_SELECTION=S
          TYPE_SELECTIONINDICATOR=
          TYPE_SELECT_ALL=Ctrl+A
          TYPE_TEXT=T
          TYPE_TOGGLE_PANEL=Space
          TYPE_UNDO=Ctrl+Z
          
          [SavePath]
          fixed=true
          path=/home/$USER/Pictures/Screenshots
        dest: /etc/skel/.config/flameshot/flameshot.ini
        mode: '0644'

    - name: Create Screenshots directory in user template
      ansible.builtin.file:
        path: /etc/skel/Pictures/Screenshots
        state: directory
        mode: '0755'

    # ====== DESKTOP INTEGRATION ======
    - name: Create enhanced Flameshot desktop entry
      ansible.builtin.copy:
        content: |
          [Desktop Entry]
          Name=Flameshot
          Comment=Powerful yet simple to use screenshot software
          GenericName=Screenshot tool
          Exec=/usr/local/bin/flameshot gui
          Icon=flameshot
          Terminal=false
          Type=Application
          Categories=Graphics;Photography;
          StartupNotify=true
          Keywords=screen;capture;screenshot;grab;snip;
          
          Actions=TakeScreenshot;LaunchConfig;
          
          [Desktop Action TakeScreenshot]
          Name=Take Screenshot
          Exec=/usr/local/bin/flameshot gui
          
          [Desktop Action LaunchConfig]
          Name=Configure Flameshot
          Exec=/usr/local/bin/flameshot config
        dest: /usr/share/applications/flameshot.desktop
        mode: '0644'
      when: create_desktop_entry

   # ====== GNOME KEYBOARD SHORTCUTS ======
    - name: Create GNOME keyboard shortcuts configuration script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          # Configure Flameshot keyboard shortcuts for GNOME
          
          # Wait for GNOME session
          sleep 10
          
          if [ "$XDG_CURRENT_DESKTOP" = "GNOME" ] && [ -n "$DISPLAY" ]; then
              # Set up environment
              if [ -z "$DBUS_SESSION_BUS_ADDRESS" ]; then
                  export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$(id -u)/bus"
              fi
              
              echo "Configuring Flameshot shortcuts for GNOME..."
              
              # CRITICAL: Disable ALL default GNOME screenshot shortcuts
              gsettings set org.gnome.shell.keybindings screenshot '[]' 2>/dev/null || true
              #gsettings set org.gnome.shell.keybindings show-screenshot-ui '[]' 2>/dev/null || true
              #gsettings set org.gnome.shell.keybindings screenshot-window '[]' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot '[]' 2>/dev/null || true
              #gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot-clip '[]' 2>/dev/null || true
              #gsettings set org.gnome.settings-daemon.plugins.media-keys window-screenshot '[]' 2>/dev/null || true
              #gsettings set org.gnome.settings-daemon.plugins.media-keys window-screenshot-clip '[]' 2>/dev/null || true
              #gsettings set org.gnome.settings-daemon.plugins.media-keys area-screenshot '[]' 2>/dev/null || true
              #gsettings set org.gnome.settings-daemon.plugins.media-keys area-screenshot-clip '[]' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys screencast '[]' 2>/dev/null || true
              
              echo "Disabled default GNOME screenshot shortcuts"
              
              # Get existing custom keybindings
              existing=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings)
              
              # Create new custom keybindings list
              gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-gui/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-full/']" 2>/dev/null || true
              
              # Flameshot GUI (Print Screen key)
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-gui/ name 'Flameshot Screenshot' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-gui/ command '/usr/local/bin/flameshot gui' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-gui/ binding 'Print' 2>/dev/null || true
              
              # Flameshot full screen (Ctrl+Print Screen)
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-full/ name 'Flameshot Full Screen' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-full/ command '/usr/local/bin/flameshot full' 2>/dev/null || true
              gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/flameshot-full/ binding '<Primary>Print' 2>/dev/null || true
              
              echo "Flameshot keyboard shortcuts configured"
              logger "Flameshot GNOME shortcuts configured for user $(whoami)"
          fi
        dest: /usr/local/bin/configure-flameshot-shortcuts.sh
        mode: '0755'
      when: configure_shortcuts
      

    - name: Create autostart entry for Flameshot
      ansible.builtin.copy:
        content: |
          [Desktop Entry]
          Type=Application
          Name=Flameshot
          Comment=Enable Flameshot screenshot tool
          Exec=/usr/local/bin/flameshot
          Icon=flameshot
          Hidden=false
          NoDisplay=true
          X-GNOME-Autostart-enabled=true
          X-GNOME-Autostart-Delay=10
          Categories=Utility;
        dest: /etc/xdg/autostart/flameshot.desktop
        mode: '0644'

    - name: Create autostart entry for Flameshot shortcuts configuration
      ansible.builtin.copy:
        content: |
          [Desktop Entry]
          Type=Application
          Name=Flameshot Shortcuts
          Comment=Configure Flameshot keyboard shortcuts
          Exec=/usr/local/bin/configure-flameshot-shortcuts.sh
          Hidden=false
          NoDisplay=true
          X-GNOME-Autostart-enabled=true
          X-GNOME-Autostart-Delay=15
          Categories=System;Settings;
        dest: /etc/xdg/autostart/flameshot-shortcuts.desktop
        mode: '0644'
      when: configure_shortcuts

    # ====== APPLY TO CURRENT USERS ======
    - name: Apply Flameshot shortcuts to currently logged-in users
      ansible.builtin.shell: |
        for user in $(ps aux | grep -v grep | grep gnome-shell | awk '{print $1}' | sort | uniq); do
          if [ -n "$user" ] && [ "$user" != "gdm" ]; then
            user_id=$(id -u "$user" 2>/dev/null)
            if [ -n "$user_id" ] && [ -S "/run/user/$user_id/bus" ]; then
              echo "Configuring Flameshot for logged-in user: $user"
              sudo -u "$user" /usr/local/bin/configure-flameshot-shortcuts.sh &
            fi
          fi
        done
      when: configure_shortcuts
      ignore_errors: yes

    # ====== VERIFICATION ======
    - name: Create Flameshot verification script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          echo "=== Flameshot Screenshot Tool Verification ==="
          echo
          
          echo "📸 Installation:"
          if command -v flameshot >/dev/null 2>&1; then
              echo "✅ Flameshot wrapper script installed"
              
              if flatpak list | grep -qi flameshot; then
                  echo "✅ Installed via Flatpak"
              fi
          else
              echo "❌ Flameshot not found"
          fi
          echo
          
          echo "🔧 Configuration:"
          if [ -f "/etc/skel/.config/flameshot/flameshot.ini" ]; then
              echo "✅ Default configuration template created"
          else
              echo "❌ Configuration template missing"
          fi
          
          if [ -d "/etc/skel/Pictures/Screenshots" ]; then
              echo "✅ Screenshots directory template created"
          else
              echo "❌ Screenshots directory template missing"
          fi
          echo
          
          echo "🖥️ Desktop Integration:"
          if [ -f "/usr/share/applications/flameshot.desktop" ]; then
              echo "✅ Desktop entry created"
          else
              echo "❌ Desktop entry missing"
          fi
          
          if [ -f "/etc/xdg/autostart/flameshot.desktop" ]; then
              echo "✅ Autostart configured"
          else
              echo "❌ Autostart missing"
          fi
          echo
          
          echo "⌨️ Keyboard Shortcuts (GNOME):"
          if [ "$XDG_CURRENT_DESKTOP" = "GNOME" ] && [ -n "$DISPLAY" ]; then
              shortcuts=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings 2>/dev/null || echo "[]")
              if [[ "$shortcuts" == *"flameshot"* ]]; then
                  echo "✅ GNOME shortcuts configured"
                  echo "   Print Screen: flameshot gui"
                  echo "   Ctrl+Print Screen: flameshot full"
              else
                  echo "⚠️ GNOME shortcuts not configured"
              fi
          else
              echo "ℹ️ Not in GNOME session - cannot check shortcuts"
          fi
          echo
          
          echo "🎯 Usage:"
          echo "• GUI Mode: flameshot gui"
          echo "• Full Screen: flameshot full"
          echo "• Config: flameshot config"
          echo "• Print Screen key: Take screenshot with GUI"
          echo "• Ctrl+Print Screen: Take full screen screenshot"
          echo
          
          echo "📁 Screenshots saved to: ~/Pictures/Screenshots/"
        dest: /usr/local/bin/verify-flameshot.sh
        mode: '0755'

    - name: Run Flameshot verification
      ansible.builtin.shell: /usr/local/bin/verify-flameshot.sh
      register: flameshot_verification
      changed_when: false

    - name: Display verification results
      ansible.builtin.debug:
        msg: "{{ flameshot_verification.stdout_lines }}"

    - name: Display installation completion
      ansible.builtin.debug:
        msg: |
          📸 Flameshot Installation Complete!
          
          ✅ Installed Components:
          • Flameshot screenshot tool (via Flatpak)
          • GNOME keyboard shortcuts (Print Screen)
          • Desktop integration and autostart
          • Default configuration template
          • Screenshots directory setup
          
          🎯 Key Features:
          • Advanced annotation tools
          • Easy sharing and uploading
          • Configurable shortcuts
          • Perfect for VFX documentation
          
          ⌨️ Keyboard Shortcuts:
          • Print Screen: Open Flameshot GUI
          • Ctrl+Print Screen: Full screen capture
          
          📁 Screenshots Location: ~/Pictures/Screenshots/
          
          🔧 Configuration: flameshot config
