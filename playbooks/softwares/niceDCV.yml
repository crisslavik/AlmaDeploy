---
- name: NICE DCV Server Complete Installation - Final Version with Auto-Login
  hosts: all
  become: yes
  
  vars:
    dcv_license_server: "5053@license.ad.noxvfx.com"
    ad_domain: "ad.noxvfx.com"
    ad_home_base: "/home/ad.noxvfx.com"
    auto_login_user: "cristian.slavik"  # Change this per host or use host_vars
  
  tasks:
    # STEP 1: Install Prerequisites and Dependencies
    - name: Install EPEL repository
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        state: present
        disable_gpg_check: yes

    - name: Install X server and desktop environment packages
      ansible.builtin.yum:
        name:
          - '@base-x'
          - '@gnome-desktop'
          - gdm
          - glx-utils
          - mesa-libGLU
          - pulseaudio-utils
          - xorg-x11-server-Xorg
          - xorg-x11-utils
          - xorg-x11-xinit
        state: present

    - name: Install DKMS for USB driver support
      ansible.builtin.yum:
        name: dkms
        state: present

    # STEP 2: Copy RPM Files
    - name: Create temporary directory for DCV packages
      ansible.builtin.file:
        path: /tmp/nice-dcv-packages
        state: directory
        mode: '0755'

    - name: Copy all NICE DCV RPM files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /tmp/nice-dcv-packages/
        mode: '0644'
      loop:
        - ../../files/nice-dcv/nice-dcv-gl-2024.0.1096-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-gltest-2024.0.352-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-server-2024.0.19030-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-simple-external-authenticator-2024.0.266-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-web-viewer-2024.0.19030-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-xdcv-2024.0.654-1.el9.x86_64.rpm

    # STEP 3: Install DCV Packages
    - name: Import NICE GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY

    - name: Install NICE DCV Server (main package)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-server-2024.0.19030-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV Web Viewer
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-web-viewer-2024.0.19030-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE XDCV (for virtual sessions)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-xdcv-2024.0.654-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV GL (GPU support)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-gl-2024.0.1096-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV GL Test
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-gltest-2024.0.352-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV Simple External Authenticator
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-simple-external-authenticator-2024.0.266-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    # STEP 4: Configure Firewall
    - name: Ensure firewalld is installed
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Start and enable firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Open DCV port 8443/tcp in firewall
      ansible.builtin.firewalld:
        port: 8443/tcp
        permanent: yes
        state: enabled
        immediate: yes

    # STEP 5: Force X11 and Configure Auto-Login
    - name: Configure GDM to use X11 with auto-login
      ansible.builtin.copy:
        dest: /etc/gdm/custom.conf
        content: |
          [daemon]
          AutomaticLoginEnable=True
          AutomaticLogin={{ auto_login_user }}
          WaylandEnable=false
          DefaultSession=gnome-xorg.desktop
        mode: '0644'

    # STEP 6: Configure DCV Server
    - name: Create DCV configuration directory
      ansible.builtin.file:
        path: /etc/dcv
        state: directory
        mode: '0755'

    - name: Configure DCV server settings
      ansible.builtin.copy:
        dest: /etc/dcv/dcv.conf
        content: |
          [license]
          license-file="{{ dcv_license_server }}"

          [security]
          authentication="system"

          [display]
          target-fps=30

          [display/linux]
          gl-displays=[":0"]
          use-glx-fallback-provider=true

          [session-management]
          create-session=true

          [session-management/defaults]
          permissions-file="/etc/dcv/dcv_permissions.conf"

          [session-management/automatic-console-session]
          owner=""

          [connectivity]
          enable-quic-frontend=true
        mode: '0644'

    - name: Create DCV permissions file for all authenticated users
      ansible.builtin.copy:
        dest: /etc/dcv/dcv_permissions.conf
        content: |
          [permissions]
          %owner% allow builtin
          %authenticated% allow builtin
        mode: '0644'

    # STEP 7: Configure License Server Environment
    - name: Create systemd override directory for dcvserver
      ansible.builtin.file:
        path: /etc/systemd/system/dcvserver.service.d
        state: directory
        mode: '0755'

    - name: Create systemd override to set RLM_LICENSE environment variable
      ansible.builtin.copy:
        dest: /etc/systemd/system/dcvserver.service.d/license.conf
        content: |
          [Service]
          Environment="RLM_LICENSE={{ dcv_license_server }}"
        mode: '0644'

    # STEP 8: Fix SSSD Access Control for DCV
    - name: Backup SSSD configuration
      ansible.builtin.copy:
        src: /etc/sssd/sssd.conf
        dest: /etc/sssd/sssd.conf.backup
        remote_src: yes
        force: no

    - name: Change SSSD access_provider from ad to permit
      ansible.builtin.lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^access_provider = ad'
        line: 'access_provider = permit'
        backup: yes

    - name: Restart SSSD to apply changes
      ansible.builtin.systemd:
        name: sssd
        state: restarted

    # STEP 9: Configure PAM for DCV
    - name: Create DCV PAM configuration
      ansible.builtin.copy:
        dest: /etc/pam.d/dcv
        content: |
          #%PAM-1.0
          auth       sufficient   pam_sss.so
          auth       required     pam_deny.so
          account    sufficient   pam_sss.so
          account    sufficient   pam_permit.so
          session    optional     pam_keyinit.so revoke
          session    required     pam_limits.so
          session    required     pam_unix.so
          session    optional     pam_sss.so
        mode: '0644'

    # STEP 10: Enable and Start Services
    - name: Set default target to graphical
      ansible.builtin.command:
        cmd: systemctl set-default graphical.target
      register: graphical_target
      changed_when: "'Created symlink' in graphical_target.stdout or 'Removed' in graphical_target.stdout"

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start GDM
      ansible.builtin.systemd:
        name: gdm
        state: started
        enabled: yes

    - name: Enable DCV server service
      ansible.builtin.systemd:
        name: dcvserver
        enabled: yes

    - name: Start DCV server service
      ansible.builtin.systemd:
        name: dcvserver
        state: started

    - name: Wait for DCV server to be ready
      ansible.builtin.wait_for:
        port: 8443
        delay: 5
        timeout: 60

    # Cleanup
    - name: Remove temporary DCV packages directory
      ansible.builtin.file:
        path: /tmp/nice-dcv-packages
        state: absent

    - name: Final installation summary
      ansible.builtin.debug:
        msg:
          - "=========================================="
          - "NICE DCV Server Installation Complete!"
          - "=========================================="
          - "License Server: {{ dcv_license_server }}"
          - "DCV Port: 8443"
          - "Authentication: System (AD via SSSD)"
          - "AD Domain: {{ ad_domain }}"
          - "Display: X11 (Wayland disabled)"
          - "Auto-Login User: {{ auto_login_user }}"
          - "Access: https://{{ inventory_hostname }}:8443"
          - "=========================================="
          - "NEXT STEPS:"
          - "1. REBOOT the machine: ansible all -m reboot"
          - "2. After reboot, {{ auto_login_user }} will auto-login"
          - "3. DCV console session will attach automatically"
          - "4. Users can connect via web browser"
          - "=========================================="
