---
- name: NICE DCV Installation - Steps 1-4
  hosts: all
  become: yes
  
  tasks:
    # STEP 1: Install Prerequisites and Dependencies
    - name: Install EPEL repository
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        state: present
        disable_gpg_check: yes

    - name: Install X server and desktop environment packages
      ansible.builtin.yum:
        name:
          - '@base-x'
          - '@gnome-desktop'
          - gdm
          - glx-utils
          - mesa-libGLU
          - pulseaudio-utils
          - xorg-x11-server-Xorg
          - xorg-x11-utils
          - xorg-x11-xinit
        state: present

    - name: Install DKMS for USB driver support
      ansible.builtin.yum:
        name: dkms
        state: present

    # STEP 2: Copy RPM Files
    - name: Create temporary directory for DCV packages
      ansible.builtin.file:
        path: /tmp/nice-dcv-packages
        state: directory
        mode: '0755'

    - name: Copy all NICE DCV RPM files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /tmp/nice-dcv-packages/
        mode: '0644'
      loop:
        - ../../files/nice-dcv/nice-dcv-gl-2024.0.1096-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-gltest-2024.0.352-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-server-2024.0.19030-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-simple-external-authenticator-2024.0.266-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-dcv-web-viewer-2024.0.19030-1.el9.x86_64.rpm
        - ../../files/nice-dcv/nice-xdcv-2024.0.654-1.el9.x86_64.rpm

    - name: Verify all RPM files were copied
      ansible.builtin.stat:
        path: "/tmp/nice-dcv-packages/{{ item }}"
      loop:
        - nice-dcv-gl-2024.0.1096-1.el9.x86_64.rpm
        - nice-dcv-gltest-2024.0.352-1.el9.x86_64.rpm
        - nice-dcv-server-2024.0.19030-1.el9.x86_64.rpm
        - nice-dcv-simple-external-authenticator-2024.0.266-1.el9.x86_64.rpm
        - nice-dcv-web-viewer-2024.0.19030-1.el9.x86_64.rpm
        - nice-xdcv-2024.0.654-1.el9.x86_64.rpm
      register: rpm_files

    - name: Display verification results
      ansible.builtin.debug:
        msg: "All RPM files copied successfully"
      when: rpm_files.results | map(attribute='stat.exists') | select('equalto', true) | list | length == 6

    # STEP 3: Install DCV Packages
    - name: Import NICE GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY

    - name: Install NICE DCV Server (main package)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-server-2024.0.19030-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV Web Viewer
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-web-viewer-2024.0.19030-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE XDCV (for virtual sessions)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-xdcv-2024.0.654-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV GL (GPU support)
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-gl-2024.0.1096-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV GL Test
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-gltest-2024.0.352-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    - name: Install NICE DCV Simple External Authenticator
      ansible.builtin.yum:
        name: /tmp/nice-dcv-packages/nice-dcv-simple-external-authenticator-2024.0.266-1.el9.x86_64.rpm
        state: present
        disable_gpg_check: no

    # STEP 4: Configure Firewall
    - name: Ensure firewalld is installed
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Start and enable firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Open DCV port 8443/tcp in firewall
      ansible.builtin.firewalld:
        port: 8443/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: Verify firewall rule for DCV
      ansible.builtin.command:
        cmd: firewall-cmd --list-ports
      register: firewall_ports
      changed_when: false

    - name: Display firewall ports
      ansible.builtin.debug:
        msg: "Open ports: {{ firewall_ports.stdout }}"
