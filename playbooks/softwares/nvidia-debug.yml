---
# Debug NVIDIA Installation Issues
- name: Debug NVIDIA Installation on AlmaLinux
  hosts: all
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Check AlmaLinux version
      ansible.builtin.debug:
        msg: "AlmaLinux {{ ansible_distribution_version }} (Major: {{ ansible_distribution_major_version }})"

    - name: Check NVIDIA hardware
      ansible.builtin.shell: lspci | grep -i nvidia
      register: nvidia_hw
      failed_when: false

    - name: Display NVIDIA hardware
      ansible.builtin.debug:
        msg: "{{ nvidia_hw.stdout_lines if nvidia_hw.stdout_lines else 'No NVIDIA hardware found' }}"

    - name: Check current repositories
      ansible.builtin.shell: dnf repolist --enabled
      register: current_repos

    - name: Display current repositories
      ansible.builtin.debug:
        msg: "{{ current_repos.stdout_lines }}"

    - name: Add NVIDIA CUDA repository using dnf config-manager
      ansible.builtin.shell: |
        dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel{{ ansible_distribution_major_version }}/x86_64/cuda-rhel{{ ansible_distribution_major_version }}.repo
      register: add_repo_result
      failed_when: false

    - name: Import NVIDIA GPG key
      ansible.builtin.shell: |
        rpm --import https://developer.download.nvidia.com/compute/cuda/repos/rhel{{ ansible_distribution_major_version }}/x86_64/D42D0685.pub
      register: import_key_result
      failed_when: false

    - name: Update DNF cache
      ansible.builtin.dnf:
        update_cache: yes

    - name: Check repositories after adding NVIDIA
      ansible.builtin.shell: dnf repolist --enabled | grep -i nvidia
      register: nvidia_repos
      failed_when: false

    - name: Display NVIDIA repositories
      ansible.builtin.debug:
        msg: "{{ nvidia_repos.stdout_lines if nvidia_repos.stdout_lines else 'No NVIDIA repositories found' }}"

    - name: Search for available NVIDIA packages
      ansible.builtin.shell: |
        echo "=== Searching for NVIDIA packages ==="
        dnf search nvidia 2>/dev/null | grep -E "^nvidia-|^akmod-nvidia|^kmod-nvidia" || echo "No NVIDIA packages found"
        echo "=== Available nvidia-driver packages ==="
        dnf list available '*nvidia-driver*' 2>/dev/null || echo "No nvidia-driver packages"
        echo "=== Available xorg nvidia packages ==="
        dnf list available '*xorg*nvidia*' 2>/dev/null || echo "No xorg nvidia packages"
      register: nvidia_packages_search

    - name: Display available NVIDIA packages
      ansible.builtin.debug:
        msg: "{{ nvidia_packages_search.stdout_lines }}"

    - name: Try alternative package names
      ansible.builtin.shell: |
        echo "=== Checking alternative package names ==="
        dnf list available '*nvidia*' | head -20 2>/dev/null || echo "No nvidia packages found"
      register: all_nvidia_packages

    - name: Display all NVIDIA-related packages
      ansible.builtin.debug:
        msg: "{{ all_nvidia_packages.stdout_lines }}"

    - name: Check if EPEL and other repositories are properly enabled
      ansible.builtin.shell: |
        echo "=== Repository status ==="
        dnf repolist --enabled | grep -E "(epel|powertools|crb|nvidia|cuda)"
      register: repo_status

    - name: Display repository status
      ansible.builtin.debug:
        msg: "{{ repo_status.stdout_lines }}"
